name: Auto Release
on:
    release:
        types:
            - published

jobs:
    auto-release:
        runs-on: ubuntu-latest

        steps:
            - name: Check if issue has label from release tag
              id: check_label
              uses: actions/github-script@v7
              with:
                    github-token: ${{ secrets.GITHUB_TOKEN }}
                    script: |
                        const release = context.payload.release;
                        const label = release.tag_name;
                        const issue = await github.issues.get({
                            owner: context.repo.owner,
                            repo: context.repo.repo,
                            issue_number: release.id
                        });
                        const hasLabel = issue.data.labels.some(l => l.name === label);
                        return { hasLabel };

            - name: Comment on issue and close if necessary
              if: steps.check_label.outputs.hasLabel == true
              uses: actions/github-script@v7
              with:
                    github-token: ${{ secrets.GITHUB_TOKEN }}
                    script: |
                        const release = context.payload.release;
                        const issue = await github.issues.get({
                            owner: context.repo.owner,
                            repo: context.repo.repo,
                            issue_number: release.id
                        });
                        const versionTag = release.tag_name;
                        const comment = `Addressed in ${versionTag}`;
                        const commentPayload = {
                            issue_number: issue.data.number,
                            body: comment
                        };

                        // Comment on the issue
                        await github.issues.createComment(commentPayload);

                        // Close the issue if it is open
                        if (issue.data.state === 'open') {
                            await github.issues.update({
                                owner: context.repo.owner,
                                repo: context.repo.repo,
                                issue_number: issue.data.number,
                                state: 'closed'
                            });
                        }

                        // Remove the label from the issue
                        await github.issues.removeLabel({
                            owner: context.repo.owner,
                            repo: context.repo.repo,
                            issue_number: issue.data.number,
                            name: label
                        });